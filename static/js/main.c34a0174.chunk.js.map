{"version":3,"sources":["context/ThemeContext.js","pages/Login/index.js","components/Header/index.js","components/Sidebar/index.js","components/VideoCard/index.js","pages/PremiumBanner/index.js","pages/Home/index.js","pages/Trending/index.js","pages/Gaming/index.js","context/SaveContext.js","pages/VideoItemDetails/index.js","pages/SavedVideos/index.js","pages/NotFound/index.js","pages/ProtectedRoute/index.js","App.js","index.js"],"names":["ThemeContext","React","createContext","isDarkTheme","toggleTheme","Login","state","username","password","isShowError","errorMsg","isChecked","onSubmitSuccess","jwtToken","history","props","Cookies","set","expires","replace","onSubmitFailure","setState","onSubmitForm","event","a","preventDefault","userDetails","options","method","body","JSON","stringify","fetch","response","json","data","ok","jwt_token","error_msg","onChangeUsername","target","value","onChangePassword","onChangeChecked","prevState","this","undefined","get","to","Consumer","logoUrl","className","src","width","alt","onSubmit","htmlFor","type","id","onChange","placeholder","checked","style","color","Component","Header","onClickLogout","remove","onClick","modal","trigger","close","withRouter","Sidebar","size","VideoCard","videoDetails","title","thumbnailUrl","channel","viewCount","publishedAt","profileImageUrl","name","PremiumBanner","onClickCloseBtn","dataTestId","apiStatusConstants","Home","isShowedBanner","videoList","searchInput","apiStatus","getVideos","apiUrl","headers","Authorization","updatedData","videos","map","video","thumbnail_url","profile_image_url","view_count","published_at","renderLoadingView","height","renderFailureView","renderNoSearchResult","renderVideoList","length","renderHomeDetails","handleCloseButton","onChangeSearchInput","onClickSearch","Trending","trendingList","getTrendingVideos","updatedList","renderLoaderView","renderSuccessView","renderContent","mainBg","Gaming","gamingVideos","getGamingVideos","updatedVideos","SaveContext","savedVideos","toggleSaveVideo","VideoItemDetails","videoData","likeActive","dislikeActive","getVideoDetails","match","params","url","video_details","videoUrl","video_url","subscriberCount","subscriber_count","description","onClickLike","onClickDislike","renderVideoDetails","isSaved","some","controls","renderVideoContent","SavedVideos","renderNoSavedVideos","renderSavedVideosList","NotFound","ProtectedRoute","Cookie","App","prev","item","filter","Provider","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c34a0174.chunk.js","sourcesContent":["import React from 'react'\n\nconst ThemeContext = React.createContext({\n  isDarkTheme: false,\n  toggleTheme: () => {},\n})\n\nexport default ThemeContext\n","import {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport {Redirect} from 'react-router-dom'\nimport ThemeContext from '../../context/ThemeContext'\nimport './index.css'\n\nclass Login extends Component {\n  state = {\n    username: '',\n    password: '',\n    isShowError: false,\n    errorMsg: '',\n    isChecked: false,\n  }\n\n  onSubmitSuccess = jwtToken => {\n    const {history} = this.props\n    Cookies.set('jwt_token', jwtToken, {expires: 30})\n    history.replace('/')\n  }\n\n  onSubmitFailure = errorMsg => {\n    this.setState({isShowError: true, errorMsg})\n  }\n\n  onSubmitForm = async event => {\n    event.preventDefault()\n    const {username, password} = this.state\n    const userDetails = {username, password}\n    const url = 'https://apis.ccbp.in/login'\n    const options = {\n      method: 'POST',\n      body: JSON.stringify(userDetails),\n    }\n    const response = await fetch(url, options)\n    const data = await response.json()\n    if (response.ok) {\n      this.onSubmitSuccess(data.jwt_token)\n    } else {\n      this.onSubmitFailure(data.error_msg)\n    }\n  }\n\n  onChangeUsername = event => {\n    this.setState({username: event.target.value})\n  }\n\n  onChangePassword = event => {\n    this.setState({password: event.target.value})\n  }\n\n  onChangeChecked = () => {\n    this.setState(prevState => ({\n      isChecked: !prevState.isChecked,\n    }))\n  }\n\n  render() {\n    const {username, password, isShowError, errorMsg, isChecked} = this.state\n    const jwtToken = Cookies.get('jwt_token')\n    if (jwtToken !== undefined) {\n      return <Redirect to=\"/\" />\n    }\n\n    return (\n      <ThemeContext.Consumer>\n        {value => {\n          const {isDarkTheme} = value\n          const logoUrl = isDarkTheme\n            ? 'https://assets.ccbp.in/frontend/react-js/nxt-watch-logo-dark-theme-img.png'\n            : 'https://assets.ccbp.in/frontend/react-js/nxt-watch-logo-light-theme-img.png'\n\n          return (\n            <div className=\"bg-container\">\n              <div className=\"card-container\">\n                <img\n                  src={logoUrl}\n                  width=\"100px\"\n                  alt=\"website logo\"\n                  className=\"logo-img\"\n                />\n                <form className=\"submit-form\" onSubmit={this.onSubmitForm}>\n                  <label htmlFor=\"username\" className=\"label-name\">\n                    USERNAME\n                  </label>\n                  <input\n                    className=\"input-user\"\n                    type=\"text\"\n                    id=\"username\"\n                    value={username}\n                    onChange={this.onChangeUsername}\n                    placeholder=\"Username\"\n                  />\n\n                  <label htmlFor=\"password\" className=\"label-name\">\n                    PASSWORD\n                  </label>\n                  <input\n                    className=\"input-user\"\n                    type={isChecked ? 'text' : 'password'}\n                    id=\"password\"\n                    value={password}\n                    onChange={this.onChangePassword}\n                    placeholder=\"Password\"\n                  />\n                  <div className=\"show-password-card\">\n                    <input\n                      className=\"input-user\"\n                      type=\"checkbox\"\n                      id=\"showPassword\"\n                      checked={isChecked}\n                      onChange={this.onChangeChecked}\n                    />\n                    <label htmlFor=\"showPassword\" className=\"password-name\">\n                      Show Password\n                    </label>\n                  </div>\n                  <button\n                    type=\"submit\"\n                    style={{color: '#ffffff'}}\n                    className=\"login-button\"\n                  >\n                    Login\n                  </button>\n                  {isShowError && <p className=\"error-msg\">*{errorMsg}</p>}\n                </form>\n              </div>\n            </div>\n          )\n        }}\n      </ThemeContext.Consumer>\n    )\n  }\n}\n\nexport default Login\n","import {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport {Link, withRouter} from 'react-router-dom'\nimport Popup from 'reactjs-popup'\nimport ThemeContext from '../../context/ThemeContext'\n\nimport './index.css'\n\nclass Header extends Component {\n  onClickLogout = () => {\n    Cookies.remove('jwt_token')\n    const {history} = this.props\n    history.replace('/login')\n  }\n\n  render() {\n    return (\n      <ThemeContext.Consumer>\n        {({isDarkTheme, toggleTheme}) => (\n          <div\n            className={\n              isDarkTheme ? 'header-dark-container' : 'header-light-container'\n            }\n          >\n            <Link to=\"/\">\n              <img\n                src={\n                  isDarkTheme\n                    ? 'https://assets.ccbp.in/frontend/react-js/nxt-watch-logo-dark-theme-img.png'\n                    : 'https://assets.ccbp.in/frontend/react-js/nxt-watch-logo-light-theme-img.png'\n                }\n                width=\"100px\"\n                alt=\"website logo\"\n                className=\"logo-img\"\n              />\n            </Link>\n            <div className=\"theme-logout-card\">\n              <button\n                onClick={toggleTheme}\n                className=\"theme-btn\"\n                data-testid=\"theme\"\n              >\n                <img\n                  src={\n                    isDarkTheme\n                      ? 'https://assets.ccbp.in/frontend/react-js/light-theme-img.png'\n                      : 'https://assets.ccbp.in/frontend/react-js/dark-theme-img.png'\n                  }\n                  width=\"30px\"\n                  alt=\"theme\"\n                />\n              </button>\n              <img\n                src=\"https://assets.ccbp.in/frontend/react-js/nxt-watch-profile-img.png\"\n                alt=\"profile\"\n                width=\"30px\"\n              />\n              <div className=\"popup-container\">\n                <Popup\n                  modal\n                  trigger={\n                    <button\n                      className={isDarkTheme ? 'dark-btn' : 'light-btn'}\n                      type=\"button\"\n                      onClick={this.onClickLogout}\n                    >\n                      Logout\n                    </button>\n                  }\n                  className=\"popup-content\"\n                >\n                  {close => (\n                    <>\n                      <div\n                        className={\n                          isDarkTheme\n                            ? 'popup-content-light'\n                            : 'popup-content-dark'\n                        }\n                      >\n                        <p\n                          className={isDarkTheme ? 'dark-popup' : 'light-popup'}\n                        >\n                          Are you sure, you want to logout?\n                        </p>\n                        <div className=\"popup-btn\">\n                          <button\n                            type=\"button\"\n                            className={\n                              isDarkTheme\n                                ? 'cancel-btn-dark'\n                                : 'cancel-btn-light'\n                            }\n                            onClick={() => close()}\n                          >\n                            Cancel\n                          </button>\n\n                          <button\n                            type=\"button\"\n                            className=\"confirm-btn\"\n                            onClick={this.onClickLogout}\n                          >\n                            Confirm\n                          </button>\n                        </div>\n                      </div>\n                    </>\n                  )}\n                </Popup>\n              </div>\n            </div>\n          </div>\n        )}\n      </ThemeContext.Consumer>\n    )\n  }\n}\n\nexport default withRouter(Header)\n","import {Link} from 'react-router-dom'\nimport {IoMdHome} from 'react-icons/io'\nimport {FaFire} from 'react-icons/fa'\nimport {SiYoutubegaming} from 'react-icons/si'\nimport {MdPlaylistPlay} from 'react-icons/md'\nimport ThemeContext from '../../context/ThemeContext'\nimport './index.css'\n\nconst Sidebar = () => (\n  <ThemeContext.Consumer>\n    {({isDarkTheme}) => (\n      <div className={isDarkTheme ? 'dark-sidebar' : 'light-sidebar'}>\n        <ul className=\"sidebar-menu\">\n          <Link to=\"/\" className=\"icons-text\">\n            <IoMdHome size={20} color=\"#64748b\" />\n            <li className={isDarkTheme ? 'light-text' : 'dark-text'}>Home</li>\n          </Link>\n\n          <Link to=\"/trending\" className=\"icons-text\">\n            <FaFire size={20} color=\"#64748b\" />\n            <li className={isDarkTheme ? 'light-text' : 'dark-text'}>\n              Trending\n            </li>\n          </Link>\n\n          <Link to=\"/gaming\" className=\"icons-text\">\n            <SiYoutubegaming size={20} color=\"#64748b\" />\n            <li className={isDarkTheme ? 'light-text' : 'dark-text'}>Gaming</li>\n          </Link>\n\n          <Link to=\"/saved-videos\" className=\"icons-text\">\n            <MdPlaylistPlay size={20} color=\"#64748b\" />\n            <li className={isDarkTheme ? 'light-text' : 'dark-text'}>\n              Saved videos\n            </li>\n          </Link>\n        </ul>\n\n        <div className=\"contact-container\">\n          <p className={isDarkTheme ? 'light-head' : 'dark-head'}>CONTACT US</p>\n          <div className=\"icons-link\">\n            <img\n              src=\"https://assets.ccbp.in/frontend/react-js/nxt-watch-facebook-logo-img.png\"\n              alt=\"facebook logo\"\n              width=\"20\"\n            />\n            <img\n              src=\"https://assets.ccbp.in/frontend/react-js/nxt-watch-twitter-logo-img.png\"\n              alt=\"twitter logo\"\n              width=\"20\"\n            />\n            <img\n              src=\"https://assets.ccbp.in/frontend/react-js/nxt-watch-linked-in-logo-img.png\"\n              alt=\"linked in logo\"\n              width=\"20\"\n            />\n          </div>\n          <p className={isDarkTheme ? 'light-paragraph' : 'dark-paragraph'}>\n            Enjoy! Now to see your channels and recommendations!\n          </p>\n        </div>\n      </div>\n    )}\n  </ThemeContext.Consumer>\n)\nexport default Sidebar\n","import {Link} from 'react-router-dom'\nimport ThemeContext from '../../context/ThemeContext'\nimport './index.css'\n\nconst VideoCard = ({videoDetails}) => {\n  const {\n    id,\n    title,\n    thumbnailUrl,\n    channel,\n    viewCount,\n    publishedAt,\n  } = videoDetails\n  return (\n    <ThemeContext.Consumer>\n      {value => {\n        const {isDarkTheme} = value\n        return (\n          <Link to={`/videos/${id}`} className=\"video-card-link\">\n            <li\n              className={isDarkTheme ? 'video-card-dark' : 'video-card-light'}\n            >\n              <img\n                src={thumbnailUrl}\n                alt=\"video thumbnail\"\n                className=\"video-card-img\"\n              />\n              <div className=\"video-info\">\n                <img\n                  src={channel.profileImageUrl}\n                  alt=\"channel logo\"\n                  className=\"channel-logo\"\n                />\n                <div className=\"video-card-text\">\n                  <p className={isDarkTheme ? 'dark-title' : 'light-title'}>\n                    {title}\n                  </p>\n                  <p className=\"video-name\">{channel.name}</p>\n                  <p className=\"views-published\">\n                    {viewCount} views . {publishedAt}\n                  </p>\n                </div>\n              </div>\n            </li>\n          </Link>\n        )\n      }}\n    </ThemeContext.Consumer>\n  )\n}\nexport default VideoCard\n","import {IoMdClose} from 'react-icons/io'\nimport './index.css'\n\nconst PremiumBanner = ({onClickCloseBtn, dataTestId}) => (\n  <div className=\"banner-container\" data-testid={dataTestId}>\n    <div className=\"banner-text\">\n      <img\n        src=\"https://assets.ccbp.in/frontend/react-js/nxt-watch-logo-light-theme-img.png\"\n        width=\"130px\"\n        alt=\"nxt watch logo\"\n      />\n      <p>Buy Nxt Watch Premium prepaid plans with UPI</p>\n      <button className=\"get-btn\">GET IT NOW</button>\n    </div>\n    <button className=\"cross-btn\" onClick={onClickCloseBtn} data-testid=\"close\">\n      <IoMdClose size={24} />\n    </button>\n  </div>\n)\nexport default PremiumBanner\n","import {Component} from 'react'\nimport Loader from 'react-loader-spinner'\nimport Cookies from 'js-cookie'\nimport {BsSearch} from 'react-icons/bs'\nimport Header from '../../components/Header'\nimport Sidebar from '../../components/Sidebar'\nimport VideoCard from '../../components/VideoCard'\nimport PremiumBanner from '../PremiumBanner'\nimport ThemeContext from '../../context/ThemeContext'\nimport './index.css'\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  inProgress: 'IN_PROGRESS',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n}\n\nclass Home extends Component {\n  state = {\n    isShowedBanner: true,\n    videoList: [],\n    searchInput: '',\n    apiStatus: apiStatusConstants.initial,\n  }\n\n  componentDidMount() {\n    this.getVideos()\n  }\n\n  getVideos = async () => {\n    this.setState({apiStatus: apiStatusConstants.inProgress})\n    const {searchInput} = this.state\n    const jwtToken = Cookies.get('jwt_token')\n    const apiUrl = `https://apis.ccbp.in/videos/all?search=${searchInput}`\n    const options = {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n    }\n    const response = await fetch(apiUrl, options)\n    if (response.ok === true) {\n      const data = await response.json()\n      const updatedData = data.videos.map(video => ({\n        id: video.id,\n        title: video.title,\n        thumbnailUrl: video.thumbnail_url,\n        channel: {\n          name: video.channel.name,\n          profileImageUrl: video.channel.profile_image_url,\n        },\n        viewCount: video.view_count,\n        publishedAt: video.published_at,\n      }))\n      this.setState({\n        videoList: updatedData,\n        apiStatus: apiStatusConstants.success,\n      })\n    } else {\n      this.setState({apiStatus: apiStatusConstants.failure})\n    }\n  }\n\n  renderLoadingView = () => (\n    <div className=\"loader-container\" data-testid=\"loader\">\n      <Loader type=\"ThreeDots\" color=\"#ffffff\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  renderFailureView = isDarkTheme => (\n    <div className=\"faillure-container\">\n      <img\n        src={\n          isDarkTheme\n            ? 'https://assets.ccbp.in/frontend/react-js/nxt-watch-failure-view-dark-theme-img.png'\n            : 'https://assets.ccbp.in/frontend/react-js/nxt-watch-failure-view-light-theme-img.png'\n        }\n        alt=\"failure view\"\n        width={200}\n      />\n      <h1 className={isDarkTheme ? 'dark-failure-head' : 'light-failure-head'}>\n        Oops! Something Went Wrong\n      </h1>\n      <p className=\"failure-paragraph\">\n        We are having some trouble to complete your request.\n      </p>\n      <p className=\"failure-paragraph\">Please try again.</p>\n      <button type=\"button\" className=\"Retry-btn\" onClick={this.getVideos}>\n        Retry\n      </button>\n    </div>\n  )\n\n  renderNoSearchResult = isDarkTheme => (\n    <div className=\"noSearch-container\">\n      <img\n        src=\"https://assets.ccbp.in/frontend/react-js/nxt-watch-no-search-results-img.png\"\n        alt=\"no videos\"\n        width={200}\n      />\n      <h1 className={isDarkTheme ? 'light-failure-head' : 'dark-failure-head'}>\n        No Search Results Found\n      </h1>\n      <p className=\"failure-paragraph\">\n        Try different key words or remove search filter\n      </p>\n      <button type=\"button\" className=\"Retry-btn\" onClick={this.getVideos}>\n        Retry\n      </button>\n    </div>\n  )\n\n  renderVideoList = isDarkTheme => {\n    const {videoList} = this.state\n    if (videoList.length === 0) {\n      return this.renderNoSearchResult(isDarkTheme)\n    }\n    return (\n      <ul className=\"videos-list-container\">\n        {videoList.map(video => (\n          <VideoCard key={video.id} videoDetails={video} />\n        ))}\n      </ul>\n    )\n  }\n\n  renderHomeDetails = isDarkTheme => {\n    const {apiStatus} = this.state\n    switch (apiStatus) {\n      case apiStatusConstants.inProgress:\n        return this.renderLoadingView()\n      case apiStatusConstants.success:\n        return this.renderVideoList(isDarkTheme)\n      case apiStatusConstants.failure:\n        return this.renderFailureView(isDarkTheme)\n      default:\n        return null\n    }\n  }\n\n  handleCloseButton = () => {\n    this.setState({isShowedBanner: false})\n  }\n\n  onChangeSearchInput = event => {\n    this.setState({searchInput: event.target.value})\n  }\n\n  onClickSearch = () => {\n    this.getVideos()\n  }\n\n  render() {\n    const {isShowedBanner, searchInput} = this.state\n    return (\n      <ThemeContext.Consumer>\n        {value => {\n          const {isDarkTheme} = value\n          return (\n            <>\n              <Header />\n              <div className=\"home-main-container\">\n                <Sidebar />\n                <div\n                  className={\n                    isDarkTheme ? 'home-content-dark' : 'home-content-light'\n                  }\n                  data-testid=\"home\"\n                >\n                  {isShowedBanner && (\n                    <PremiumBanner\n                      data-testid=\"banner\"\n                      onClickCloseBtn={this.handleCloseButton}\n                    />\n                  )}\n                  <div className=\"search-bar-container\">\n                    <input\n                      type=\"search\"\n                      className=\"search-input\"\n                      placeholder=\"Search\"\n                      value={searchInput}\n                      onChange={this.onChangeSearchInput}\n                    />\n                    <button\n                      className=\"search-icon-btn\"\n                      type=\"button\"\n                      data-testid=\"searchButton\"\n                      onClick={this.onClickSearch}\n                    >\n                      <BsSearch size={16} />\n                    </button>\n                  </div>\n                  {this.renderHomeDetails(isDarkTheme)}\n                </div>\n              </div>\n            </>\n          )\n        }}\n      </ThemeContext.Consumer>\n    )\n  }\n}\n\nexport default Home\n","import {Component} from 'react'\nimport {HiFire} from 'react-icons/hi'\nimport Loader from 'react-loader-spinner'\nimport Cookies from 'js-cookie'\nimport {Link} from 'react-router-dom'\nimport Header from '../../components/Header'\nimport Sidebar from '../../components/Sidebar'\nimport ThemeContext from '../../context/ThemeContext'\n\nimport './index.css'\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  inProgress: 'IN_PROGRESS',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n}\n\nclass Trending extends Component {\n  state = {\n    trendingList: [],\n    apiStatus: apiStatusConstants.initial,\n  }\n\n  componentDidMount() {\n    this.getTrendingVideos()\n  }\n\n  getTrendingVideos = async () => {\n    this.setState({apiStatus: apiStatusConstants.inProgress})\n    const jwtToken = Cookies.get('jwt_token')\n    const url = 'https://apis.ccbp.in/videos/trending'\n    const options = {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n      method: 'GET',\n    }\n\n    const response = await fetch(url, options)\n    if (response.ok) {\n      const data = await response.json()\n      const updatedList = data.videos.map(video => ({\n        id: video.id,\n        title: video.title,\n        thumbnailUrl: video.thumbnail_url,\n        channel: {\n          name: video.channel.name,\n          profileImageUrl: video.channel.profile_image_url,\n        },\n        viewCount: video.view_count,\n        publishedAt: video.published_at,\n      }))\n      this.setState({\n        trendingList: updatedList,\n        apiStatus: apiStatusConstants.success,\n      })\n    } else {\n      this.setState({apiStatus: apiStatusConstants.failure})\n    }\n  }\n\n  renderLoaderView = () => (\n    <div className=\"loader-container\" data-testid=\"loader\">\n      <Loader type=\"ThreeDots\" color=\"#0b69ff\" height={50} width={50} />\n    </div>\n  )\n\n  renderFailureView = isDarkTheme => (\n    <div className=\"faillure-container\">\n      <img\n        src={\n          isDarkTheme\n            ? 'https://assets.ccbp.in/frontend/react-js/nxt-watch-failure-view-dark-theme-img.png'\n            : 'https://assets.ccbp.in/frontend/react-js/nxt-watch-failure-view-light-theme-img.png'\n        }\n        alt=\"failure view\"\n        className=\"failure-img\"\n      />\n      <h1 className={isDarkTheme ? 'dark-failure-head' : 'light-failure-head'}>\n        Oops! Something Went Wrong\n      </h1>\n      <p className=\"failure-paragraph\">\n        We are having some trouble to complete your request. Please try again.\n      </p>\n      <button className=\"Retry-btn\" onClick={this.getTrendingVideos}>\n        Retry\n      </button>\n    </div>\n  )\n\n  renderSuccessView = isDarkTheme => {\n    const {trendingList} = this.state\n    return (\n      <ul className=\"trending-videos-list\">\n        {trendingList.map(video => (\n          <Link\n            to={`/videos/${video.id}`}\n            className=\"trending-link-item\"\n            key={video.id}\n          >\n            <li className=\"trending-video-item\" key={video.id}>\n              <img\n                src={video.thumbnailUrl}\n                alt=\"video thumbnail\"\n                className=\"trending-thumbnail\"\n              />\n              <div className=\"trending-video-details\">\n                <p className={isDarkTheme ? 'dark-title' : 'light-title'}>\n                  {video.title}\n                </p>\n                <p className=\"trending-channel\">{video.channel.name}</p>\n                <p className=\"trending-views\">\n                  {video.viewCount} views • {video.publishedAt}\n                </p>\n              </div>\n            </li>\n          </Link>\n        ))}\n      </ul>\n    )\n  }\n\n  renderContent = isDarkTheme => {\n    const {apiStatus} = this.state\n\n    switch (apiStatus) {\n      case apiStatusConstants.inProgress:\n        return this.renderLoaderView()\n      case apiStatusConstants.success:\n        return this.renderSuccessView(isDarkTheme)\n      case apiStatusConstants.failure:\n        return this.renderFailureView(isDarkTheme)\n      default:\n        return null\n    }\n  }\n\n  render() {\n    return (\n      <ThemeContext.Consumer>\n        {value => {\n          const {isDarkTheme} = value\n          const mainBg = isDarkTheme\n            ? 'home-content-dark'\n            : 'home-content-light'\n\n          return (\n            <>\n              <Header />\n              <div className=\"home-main-container\">\n                <Sidebar />\n                <div className={mainBg} data-testid=\"trending\">\n                  <div className=\"trending-banner\">\n                    <HiFire className=\"trending-icon\" />\n                    <h1\n                      className={\n                        isDarkTheme\n                          ? 'trend-heading-dark'\n                          : 'trend-heading-light'\n                      }\n                    >\n                      Trending\n                    </h1>\n                  </div>\n                  {this.renderContent(isDarkTheme)}\n                </div>\n              </div>\n            </>\n          )\n        }}\n      </ThemeContext.Consumer>\n    )\n  }\n}\n\nexport default Trending\n","import {Component} from 'react'\nimport {SiYoutubegaming} from 'react-icons/si'\nimport Loader from 'react-loader-spinner'\nimport Cookies from 'js-cookie'\nimport {Link} from 'react-router-dom'\n\nimport Header from '../../components/Header'\nimport Sidebar from '../../components/Sidebar'\nimport ThemeContext from '../../context/ThemeContext'\n\nimport './index.css'\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  inProgress: 'IN_PROGRESS',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n}\n\nclass Gaming extends Component {\n  state = {\n    gamingVideos: [],\n    apiStatus: apiStatusConstants.initial,\n  }\n\n  componentDidMount() {\n    this.getGamingVideos()\n  }\n\n  getGamingVideos = async () => {\n    this.setState({apiStatus: apiStatusConstants.inProgress})\n    const jwtToken = Cookies.get('jwt_token')\n    const url = 'https://apis.ccbp.in/videos/gaming'\n    const options = {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n      method: 'GET',\n    }\n\n    const response = await fetch(url, options)\n    if (response.ok) {\n      const data = await response.json()\n      const updatedVideos = data.videos.map(video => ({\n        id: video.id,\n        title: video.title,\n        thumbnailUrl: video.thumbnail_url,\n        viewCount: video.view_count,\n      }))\n      this.setState({\n        gamingVideos: updatedVideos,\n        apiStatus: apiStatusConstants.success,\n      })\n    } else {\n      this.setState({apiStatus: apiStatusConstants.failure})\n    }\n  }\n\n  renderLoaderView = () => (\n    <div className=\"loader-container\" data-testid=\"loader\">\n      <Loader type=\"ThreeDots\" color=\"#0b69ff\" height={50} width={50} />\n    </div>\n  )\n\n  renderFailureView = isDarkTheme => (\n    <div className=\"faillure-container\">\n      <img\n        src={\n          isDarkTheme\n            ? 'https://assets.ccbp.in/frontend/react-js/nxt-watch-failure-view-dark-theme-img.png'\n            : 'https://assets.ccbp.in/frontend/react-js/nxt-watch-failure-view-light-theme-img.png'\n        }\n        alt=\"failure view\"\n        className=\"failure-img\"\n      />\n      <h1 className={isDarkTheme ? 'dark-failure-head' : 'light-failure-head'}>\n        Oops! Something Went Wrong\n      </h1>\n      <p className=\"failure-paragraph\">\n        We are having some trouble to complete your request. Please try again.\n      </p>\n      <button className=\"Retry-btn\" onClick={this.getGamingVideos}>\n        Retry\n      </button>\n    </div>\n  )\n\n  renderSuccessView = isDarkTheme => {\n    const {gamingVideos} = this.state\n    return (\n      <ul className=\"gaming-videos-list\">\n        {gamingVideos.map(video => (\n          <Link\n            to={`/videos/${video.id}`}\n            className=\"gaming-link-item\"\n            key={video.id}\n          >\n            <li className=\"gaming-video-card\">\n              <img\n                src={video.thumbnailUrl}\n                alt=\"video thumbnail\"\n                className=\"gaming-thumbnail\"\n              />\n              <p className={isDarkTheme ? 'dark-title' : 'light-title'}>\n                {video.title}\n              </p>\n              <p className=\"gaming-views\">\n                {video.viewCount} Watching Worldwide\n              </p>\n            </li>\n          </Link>\n        ))}\n      </ul>\n    )\n  }\n\n  renderContent = isDarkTheme => {\n    const {apiStatus} = this.state\n\n    switch (apiStatus) {\n      case apiStatusConstants.inProgress:\n        return this.renderLoaderView()\n      case apiStatusConstants.success:\n        return this.renderSuccessView(isDarkTheme)\n      case apiStatusConstants.failure:\n        return this.renderFailureView(isDarkTheme)\n      default:\n        return null\n    }\n  }\n\n  render() {\n    return (\n      <ThemeContext.Consumer>\n        {value => {\n          const {isDarkTheme} = value\n          const mainBg = isDarkTheme\n            ? 'home-content-dark'\n            : 'home-content-light'\n\n          return (\n            <>\n              <Header />\n              <div className=\"home-main-container\">\n                <Sidebar />\n                <div className={mainBg} data-testid=\"gaming\">\n                  <div className=\"gaming-banner\">\n                    <SiYoutubegaming className=\"gaming-icon\" />\n                    <h1\n                      className={\n                        isDarkTheme\n                          ? 'trend-heading-light'\n                          : 'trend-heading-dark'\n                      }\n                    >\n                      Gaming\n                    </h1>\n                  </div>\n                  {this.renderContent(isDarkTheme)}\n                </div>\n              </div>\n            </>\n          )\n        }}\n      </ThemeContext.Consumer>\n    )\n  }\n}\n\nexport default Gaming\n","// src/context/SaveContext.js\nimport React from 'react'\n\nconst SaveContext = React.createContext({\n  savedVideos: [],\n  toggleSaveVideo: () => {},\n})\n\nexport default SaveContext\n","import {Component} from 'react'\nimport Loader from 'react-loader-spinner'\nimport Cookies from 'js-cookie'\nimport ReactPlayer from 'react-player'\nimport {BiLike, BiDislike} from 'react-icons/bi'\nimport {MdPlaylistAdd} from 'react-icons/md'\nimport Header from '../../components/Header'\nimport Sidebar from '../../components/Sidebar'\nimport ThemeContext from '../../context/ThemeContext'\nimport SaveContext from '../../context/SaveContext'\nimport './index.css'\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  inProgress: 'IN_PROGRESS',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n}\n\nclass VideoItemDetails extends Component {\n  state = {\n    videoData: {},\n    likeActive: false,\n    dislikeActive: false,\n    apiStatus: apiStatusConstants.initial,\n  }\n\n  componentDidMount() {\n    this.getVideoDetails()\n  }\n\n  getVideoDetails = async () => {\n    this.setState({apiStatus: apiStatusConstants.inProgress})\n    const {match} = this.props\n    const {params} = match\n    const {id} = params\n    const jwtToken = Cookies.get('jwt_token')\n    const url = `https://apis.ccbp.in/videos/${id}`\n    const options = {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n    }\n\n    const response = await fetch(url, options)\n    if (response.ok) {\n      const data = await response.json()\n      const updatedData = {\n        id: data.video_details.id,\n        title: data.video_details.title,\n        videoUrl: data.video_details.video_url,\n        thumbnailUrl: data.video_details.thumbnail_url,\n        channel: {\n          name: data.video_details.channel.name,\n          profileImageUrl: data.video_details.channel.profile_image_url,\n          subscriberCount: data.video_details.channel.subscriber_count,\n        },\n        viewCount: data.video_details.view_count,\n        publishedAt: data.video_details.published_at,\n        description: data.video_details.description,\n      }\n\n      this.setState({\n        videoData: updatedData,\n        apiStatus: apiStatusConstants.success,\n      })\n    } else {\n      this.setState({apiStatus: apiStatusConstants.failure})\n    }\n  }\n\n  renderLoadingView = () => (\n    <div className=\"loader-container\" data-testid=\"loader\">\n      <Loader type=\"ThreeDots\" color=\"#ffffff\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  renderFailureView = isDarkTheme => (\n    <div className=\"faillure-container\">\n      <img\n        src={\n          isDarkTheme\n            ? 'https://assets.ccbp.in/frontend/react-js/nxt-watch-failure-view-dark-theme-img.png'\n            : 'https://assets.ccbp.in/frontend/react-js/nxt-watch-failure-view-light-theme-img.png'\n        }\n        alt=\"failure view\"\n        width={200}\n      />\n      <h1 className={isDarkTheme ? 'dark-failure-head' : 'light-failure-head'}>\n        Oops! Something Went Wrong\n      </h1>\n      <p className=\"failure-paragraph\">\n        We are having some trouble to complete your request.\n      </p>\n      <p className=\"failure-paragraph\">Please try again.</p>\n      <button\n        type=\"button\"\n        className=\"Retry-btn\"\n        onClick={this.getVideoDetails}\n      >\n        Retry\n      </button>\n    </div>\n  )\n\n  onClickLike = () => {\n    this.setState(prevState => ({\n      likeActive: !prevState.likeActive,\n      dislikeActive: false,\n    }))\n  }\n\n  onClickDislike = () => {\n    this.setState(prevState => ({\n      dislikeActive: !prevState.dislikeActive,\n      likeActive: false,\n    }))\n  }\n\n  renderVideoDetails = isDarkTheme => {\n    const {videoData, likeActive, dislikeActive} = this.state\n    const {\n      title,\n      channel,\n      videoUrl,\n      viewCount,\n      publishedAt,\n      description,\n    } = videoData\n\n    return (\n      <SaveContext.Consumer>\n        {({savedVideos, toggleSaveVideo}) => {\n          const isSaved = savedVideos.some(video => video.id === videoData.id)\n\n          const onClickSaveBtn = () => {\n            toggleSaveVideo(videoData)\n          }\n\n          return (\n            <div\n              className={\n                isDarkTheme\n                  ? 'video-details-dark-container'\n                  : 'video-details-light-container'\n              }\n              data-testid=\"videoItemDetails\"\n            >\n              <ReactPlayer\n                url={videoUrl}\n                className=\"react-player\"\n                width=\"100%\"\n                height=\"360px\"\n                controls\n              />\n              <p className={isDarkTheme ? 'dark-title' : 'light-title'}>\n                {title}\n              </p>\n              <div className=\"views-likes-save\">\n                <p className={isDarkTheme ? 'light-views' : 'dark-views'}>\n                  {viewCount} views . {publishedAt}\n                </p>\n                <div className=\"likes-saves\">\n                  <button\n                    type=\"button\"\n                    className={`${\n                      isDarkTheme ? 'light-buttons' : 'dark-buttons'\n                    } ${likeActive ? 'active-button' : 'in-active-button'}`}\n                    onClick={this.onClickLike}\n                  >\n                    <BiLike /> Like\n                  </button>\n\n                  <button\n                    type=\"button\"\n                    className={`${\n                      isDarkTheme ? 'light-buttons' : 'dark-buttons'\n                    } ${dislikeActive ? 'active-button' : 'in-active-button'}`}\n                    onClick={this.onClickDislike}\n                  >\n                    <BiDislike /> Dislike\n                  </button>\n\n                  <button\n                    type=\"button\"\n                    className={`${\n                      isDarkTheme ? 'light-buttons' : 'dark-buttons'\n                    } ${isSaved ? 'active-button' : 'in-active-button'}`}\n                    onClick={onClickSaveBtn}\n                  >\n                    <MdPlaylistAdd /> {isSaved ? 'Saved' : 'Save'}\n                  </button>\n                </div>\n              </div>\n\n              {channel && (\n                <div className=\"channel-info\">\n                  <img\n                    src={channel.profileImageUrl}\n                    alt=\"channel logo\"\n                    className=\"channel-logo\"\n                  />\n                  <div className=\"channel-info-text\">\n                    <p\n                      className={\n                        isDarkTheme ? 'light-description' : 'dark-description'\n                      }\n                    >\n                      {channel.name}\n                    </p>\n                    <p\n                      className={\n                        isDarkTheme ? 'light-subscribe' : 'dark-subscribe'\n                      }\n                    >\n                      {channel.subscriberCount} subscribers\n                    </p>\n                    <p\n                      className={\n                        isDarkTheme ? 'light-description' : 'dark-description'\n                      }\n                    >\n                      {description}\n                    </p>\n                  </div>\n                </div>\n              )}\n            </div>\n          )\n        }}\n      </SaveContext.Consumer>\n    )\n  }\n\n  renderVideoContent = isDarkTheme => {\n    const {apiStatus} = this.state\n    switch (apiStatus) {\n      case apiStatusConstants.inProgress:\n        return this.renderLoadingView()\n      case apiStatusConstants.success:\n        return this.renderVideoDetails(isDarkTheme)\n      case apiStatusConstants.failure:\n        return this.renderFailureView(isDarkTheme)\n      default:\n        return null\n    }\n  }\n\n  render() {\n    return (\n      <ThemeContext.Consumer>\n        {({isDarkTheme}) => (\n          <>\n            <Header />\n            <div className=\"video-details-main-container\">\n              <Sidebar />\n              {this.renderVideoContent(isDarkTheme)}\n            </div>\n          </>\n        )}\n      </ThemeContext.Consumer>\n    )\n  }\n}\n\nexport default VideoItemDetails\n","import {Component} from 'react'\nimport {FaFire} from 'react-icons/fa'\nimport {Link} from 'react-router-dom'\nimport ThemeContext from '../../context/ThemeContext'\nimport SaveContext from '../../context/SaveContext'\nimport Header from '../../components/Header'\nimport Sidebar from '../../components/Sidebar'\nimport './index.css'\n\nclass SavedVideos extends Component {\n  renderNoSavedVideos = isDarkTheme => (\n    <div className=\"no-saved-container\">\n      <img\n        src=\"https://assets.ccbp.in/frontend/react-js/nxt-watch-no-saved-videos-img.png\"\n        alt=\"no saved videos\"\n        className=\"no-saved-img\"\n      />\n      <h1 className={isDarkTheme ? 'dark-title' : 'light-title'}>\n        No saved videos found\n      </h1>\n      <p className=\"no-saved-description\">\n        You can save your videos while watching them\n      </p>\n    </div>\n  )\n\n  renderSavedVideosList = (savedVideos, isDarkTheme) => (\n    <ul className=\"saved-videos-list\">\n      {savedVideos.map(video => (\n        <Link\n          to={`/videos/${video.id}`}\n          className=\"saved-video-link\"\n          key={video.id}\n        >\n          <li className=\"saved-video-item\">\n            <img\n              src={video.thumbnailUrl}\n              alt=\"video thumbnail\"\n              className=\"saved-thumbnail\"\n            />\n            <div className=\"saved-video-details\">\n              <p className={isDarkTheme ? 'dark-title' : 'light-title'}>\n                {video.title}\n              </p>\n              <p className=\"saved-channel\">{video.channel.name}</p>\n              <p className=\"saved-channel\">\n                {video.viewCount} views • {video.publishedAt}\n              </p>\n            </div>\n          </li>\n        </Link>\n      ))}\n    </ul>\n  )\n\n  render() {\n    return (\n      <ThemeContext.Consumer>\n        {({isDarkTheme}) => (\n          <SaveContext.Consumer>\n            {({savedVideos}) => (\n              <>\n                <Header />\n                <div className=\"saved-main-container\">\n                  <Sidebar />\n                  <div\n                    className={\n                      isDarkTheme ? 'saved-content-dark' : 'saved-content-light'\n                    }\n                    data-testid=\"savedVideos\"\n                  >\n                    <div className=\"saved-heading-container\">\n                      <FaFire className=\"saved-icon\" />\n                      <h1 className=\"saved-heading\">Saved Videos</h1>\n                    </div>\n                    {savedVideos.length === 0\n                      ? this.renderNoSavedVideos(isDarkTheme)\n                      : this.renderSavedVideosList(savedVideos, isDarkTheme)}\n                  </div>\n                </div>\n              </>\n            )}\n          </SaveContext.Consumer>\n        )}\n      </ThemeContext.Consumer>\n    )\n  }\n}\n\nexport default SavedVideos\n","import Sidebar from '../../components/Sidebar'\nimport Header from '../../components/Header'\nimport ThemeContext from '../../context/ThemeContext'\nimport './index.css'\n\nconst NotFound = () => (\n  <ThemeContext.Consumer>\n    {value => {\n      const {isDarkTheme} = value\n      return (\n        <>\n          <Header />\n          <div className=\"not-found-main-container\">\n            <Sidebar />\n            <div className={isDarkTheme ? 'dark-not-found' : 'light-not-found'}>\n              <img\n                src={\n                  isDarkTheme\n                    ? 'https://assets.ccbp.in/frontend/react-js/nxt-watch-not-found-dark-theme-img.png'\n                    : 'https://assets.ccbp.in/frontend/react-js/nxt-watch-not-found-light-theme-img.png'\n                }\n                alt=\"not found\"\n                className=\"not-found\"\n              />\n              <h1 className={isDarkTheme ? 'light-found' : 'dark-found'}>\n                Page Not Found\n              </h1>\n              <p className={isDarkTheme ? 'light-para' : 'dark-para'}>\n                We are sorry, the page you requested could not be found.\n              </p>\n            </div>\n          </div>\n        </>\n      )\n    }}\n  </ThemeContext.Consumer>\n)\nexport default NotFound\n","import {Redirect, Route} from 'react-router-dom'\nimport Cookie from 'js-cookie'\n\nconst ProtectedRoute = props => {\n  const token = Cookie.get('jwt_token')\n  if (token === undefined) {\n    return <Redirect to=\"/login\" />\n  }\n  return <Route {...props} />\n}\n\nexport default ProtectedRoute\n","import {Component} from 'react'\nimport {Route, Switch, Redirect} from 'react-router-dom'\n\nimport Login from './pages/Login'\nimport Home from './pages/Home'\nimport Trending from './pages/Trending'\nimport Gaming from './pages/Gaming'\nimport VideoItemDetails from './pages/VideoItemDetails'\nimport SavedVideos from './pages/SavedVideos'\nimport NotFound from './pages/NotFound'\nimport ThemeContext from './context/ThemeContext'\nimport SaveContext from './context/SaveContext'\nimport ProtectedRoute from './pages/ProtectedRoute'\n\nclass App extends Component {\n  state = {\n    isDarkTheme: false,\n    savedVideos: [],\n  }\n\n  toggleSaveVideo = video => {\n    this.setState(prev => {\n      const isAlreadySave = prev.savedVideos.some(item => item.id === video.id)\n      const updatedList = isAlreadySave\n        ? prev.savedVideos.filter(item => item.id !== video.id)\n        : [...prev.savedVideos, video]\n      return {savedVideos: updatedList}\n    })\n  }\n\n  toggleTheme = () => {\n    this.setState(prev => ({isDarkTheme: !prev.isDarkTheme}))\n  }\n\n  render() {\n    const {isDarkTheme, savedVideos} = this.state\n    return (\n      <SaveContext.Provider\n        value={{savedVideos, toggleSaveVideo: this.toggleSaveVideo}}\n      >\n        <ThemeContext.Provider\n          value={{\n            isDarkTheme,\n            toggleTheme: this.toggleTheme,\n          }}\n        >\n          <>\n            <Switch>\n              <Route exact path=\"/login\" component={Login} />\n              <ProtectedRoute exact path=\"/\" component={Home} />\n              <ProtectedRoute exact path=\"/trending\" component={Trending} />\n              <ProtectedRoute exact path=\"/gaming\" component={Gaming} />\n              <ProtectedRoute\n                exact\n                path=\"/videos/:id\"\n                component={VideoItemDetails}\n              />\n              <ProtectedRoute\n                exact\n                path=\"/saved-videos\"\n                component={SavedVideos}\n              />\n              <Route path=\"/not-found\" component={NotFound} />\n              <Redirect to=\"/not-found\" />\n            </Switch>\n          </>\n        </ThemeContext.Provider>\n      </SaveContext.Provider>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {BrowserRouter} from 'react-router-dom'\n\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}